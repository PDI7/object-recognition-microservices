# Object Detection Frontend
# --------------------
# - Deployment for the paedi7/object-detection-frontend
# - Service - LoadBalancer to enable access
---
apiVersion: v1
kind: Service
metadata:
  name: object-detection-frontend
  labels:
    app: object-detection-frontend
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    protocol: TCP
  selector:
    app: object-detection-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: object-detection-frontend
  labels:
    app: object-detection-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: object-detection-frontend
  template:
    metadata:
      labels:
        app: object-detection-frontend
    spec:
      containers:
      - name: object-detection-frontend
        image: paedi7/object-detection-frontend:v1.0.1
        ports:
        - containerPort: 80
---
# Object Detection Backend
# --------------------
# - Deployment for the paedi7/object-detection-backend
# - Service - LoadBalancer to enable access
# - ConfigMap with DB access configuraton
---
apiVersion: v1
kind: Service
metadata:
  name: object-detection-backend
  labels:
    app: object-detection-backend
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 5001
    targetPort: 5000
    protocol: TCP
  selector:
    app: object-detection-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: object-detection-backend
  labels:
    app: object-detection-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: object-detection-backend
  template:
    metadata:
      labels:
        app: object-detection-backend
    spec:
      containers:
      - name: object-detection-backend
        image: paedi7/object-detection-backend:v1.0.1
        ports:
        - containerPort: 5000
        env:
          - name: OD_DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                name: object-detection-config
                key: OD_DATABASE_HOST
          - name: OD_DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                name: object-detection-config
                key: OD_DATABASE_PORT
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: object-detection-config
  labels:
    data: config
data:
  OD_DATABASE_PORT: "27017"
  OD_DATABASE_HOST: "object-detection-mongodb"
---
# Object Detection MongoDB
# --------------------
# - StatefulSet containing the database
# - Service to access
# - Two persistentVolumeClaims/mounts: object-detection-data and mongo-config
---
apiVersion: v1
kind: Service
metadata:
  name: object-detection-mongodb
  labels:
    app: object-detection-mongodb
spec:
  ports:
  - name: http
    port: 27017
    targetPort: 27017
    protocol: TCP
  selector:
    app: object-detection-mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: object-detection-mongodb
  labels:
    app: object-detection-mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: object-detection-mongodb
  template:
    metadata:
      labels:
        app: object-detection-mongodb
    spec:
      containers:
      - name: object-detection-mongodb
        image: mongo
        ports:
        - containerPort: 27017
          name: mongodb-port
        volumeMounts:
        - name: object-detection-data
          mountPath: /data/db
        - name: mongo-config
          mountPath: /data/configdb
  volumeClaimTemplates:
    - metadata:
        name: object-detection-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests: 
            storage: 10Mi
    - metadata:
        name: mongo-config
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests: 
            storage: 5Mi
